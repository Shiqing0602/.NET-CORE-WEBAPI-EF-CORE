// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using SHI_NOTE.Models;
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SHI_NOTE.Models;

namespace SHI_NOTE.Commands
{
    public partial class MyDbContexts : DbContext
    {
        public MyDbContexts()
        {
        }

        public MyDbContexts(DbContextOptions<MyDbContexts> options)
            : base(options)
        {
        }

        public virtual DbSet<ShiDocuments> ShiDocuments { get; set; }
        public virtual DbSet<ShiUsers> ShiUsers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=127.0.0.1;Initial Catalog=SHI_NOTE;User ID=sa;Password=123");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ShiDocuments>(entity =>
            {
                entity.HasKey(e => e.KeyNo)
                    .HasName("PK_Documents");

                entity.ToTable("SHI_Documents");

                entity.Property(e => e.KeyNo).HasColumnName("Key_No");

                entity.Property(e => e.DocumentName)
                    .IsRequired()
                    .HasColumnName("Document_name")
                    .HasMaxLength(100);

                entity.Property(e => e.UsersKeyno).HasColumnName("Users_Keyno");

                entity.HasOne(d => d.UsersKeynoNavigation)
                    .WithMany(p => p.ShiDocuments)
                    .HasForeignKey(d => d.UsersKeyno)
                    .HasConstraintName("FK_Documents_SHI_Users");
            });

            modelBuilder.Entity<ShiUsers>(entity =>
            {
                entity.HasKey(e => e.KeyNo);

                entity.ToTable("SHI_Users");

                entity.Property(e => e.KeyNo)
                    .HasColumnName("Key_No")
                    .HasComment("自增主键用户编号");

                entity.Property(e => e.Account)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("系统账号：自动生成不可修改");

                entity.Property(e => e.TokenEndtiem)
                    .HasColumnName("Token_endtiem")
                    .HasColumnType("datetime")
                    .HasComment("token到期时间");

                entity.Property(e => e.UserEmail)
                    .HasMaxLength(50)
                    .HasComment("邮箱");

                entity.Property(e => e.UserImg)
                    .HasColumnType("text")
                    .HasComment("头像");

                entity.Property(e => e.UserName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("昵称");

                entity.Property(e => e.UserPwd)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasComment("密码");

                entity.Property(e => e.UserSex).HasComment("0代表男，1代表女，2代表私密（默认为私密）");

                entity.Property(e => e.UserSign)
                    .HasColumnType("text")
                    .HasComment("个人签名");

                entity.Property(e => e.UserToken).HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}